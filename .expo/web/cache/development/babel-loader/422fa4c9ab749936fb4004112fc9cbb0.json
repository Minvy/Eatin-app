{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bengel\\\\Documents\\\\eatin\\\\src\\\\scenes\\\\BookingListScreen.jsx\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Button, Card, Modal, Toggle, Text, TopNavigation, TopNavigationAction, Divider, Icon } from '@ui-kitten/components';\nimport Navbar from \"../components/Navbar\";\nimport BookingsList from \"../components/BookingsList\";\nexport default BookingListScreen = function BookingListScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      visible = _React$useState4[0],\n      setVisible = _React$useState4[1];\n\n  var onCheckedChange = function onCheckedChange(isChecked) {\n    setChecked(isChecked);\n  };\n\n  navigateBack = function navigateBack() {\n    navigation.goBack();\n  };\n\n  var BackIcon = function BackIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"arrow-back\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  BackAction = function BackAction() {\n    return React.createElement(TopNavigationAction, {\n      icon: BackIcon,\n      onPress: navigateBack,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(TopNavigation, {\n    title: \"Reservation list\",\n    alignment: \"center\",\n    accessoryLeft: BackAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.toggleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(Toggle, {\n    style: styles.toggleElement,\n    checked: checked,\n    onChange: onCheckedChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Display expired?\")), React.createElement(BookingsList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(Modal, {\n    visible: visible,\n    backdropStyle: styles.modalBackDrop,\n    onBackdropPress: function onBackdropPress() {\n      return setVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(Card, {\n    disabled: true,\n    style: styles.modalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Map in progress...\"))));\n};\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar styles = StyleSheet.create({\n  container: {\n    maxHeight: \"100%\"\n  },\n  listEntry: {},\n  headerContainer: {\n    flexDirection: \"row\",\n    backgroundColor: \"#0095C5\",\n    padding: 5,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  headerText: {\n    color: \"white\",\n    textAlignVertical: \"center\"\n  },\n  contentContainer: {\n    padding: 10,\n    borderBottomColor: '#0095C5',\n    borderBottomWidth: 1.5\n  },\n  date: {\n    textAlign: 'right',\n    alignSelf: 'stretch'\n  },\n  icon: {\n    width: 32,\n    height: 32,\n    paddingRight: 5\n  },\n  toggleContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 5\n  },\n  toggleElement: {\n    paddingLeft: 5,\n    flex: 1,\n    textAlign: \"center\"\n  },\n  modalContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: width - 45,\n    height: height - 45\n  },\n  modalBackDrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }\n});","map":{"version":3,"sources":["C:/Users/Bengel/Documents/eatin/src/scenes/BookingListScreen.jsx"],"names":["React","useState","Button","Card","Modal","Toggle","Text","TopNavigation","TopNavigationAction","Divider","Icon","Navbar","BookingsList","BookingListScreen","navigation","checked","setChecked","visible","setVisible","onCheckedChange","isChecked","navigateBack","goBack","BackIcon","props","BackAction","flex","styles","toggleContainer","toggleElement","modalBackDrop","modalContainer","Dimensions","get","width","height","StyleSheet","create","container","maxHeight","listEntry","headerContainer","flexDirection","backgroundColor","padding","alignItems","justifyContent","headerText","color","textAlignVertical","contentContainer","borderBottomColor","borderBottomWidth","date","textAlign","alignSelf","icon","paddingRight","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Dimensions } from 'react-native';\r\nimport { Button, Card, Modal, Toggle, Text, TopNavigation, TopNavigationAction, Divider, Icon } from '@ui-kitten/components';\r\nimport Navbar from '@/components/Navbar';\r\nimport BookingsList from '@/components/BookingsList';\r\n\r\nexport default BookingListScreen = ({ navigation }) => {\r\n    const [checked, setChecked] = React.useState(false);\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const onCheckedChange = (isChecked) => {\r\n        setChecked(isChecked);\r\n    };\r\n\r\n    //Top Back navigation Code\r\n    navigateBack = () => {\r\n        navigation.goBack();\r\n    };\r\n\r\n    const BackIcon = (props) => (\r\n        <Icon {...props} name='arrow-back' />\r\n    );\r\n\r\n    BackAction = () => (\r\n        <TopNavigationAction icon={BackIcon} onPress={navigateBack} />\r\n    );\r\n    //Top Back navigation Code\r\n\r\n    //Screen render code\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <TopNavigation title='Reservation list' alignment='center' accessoryLeft={BackAction} />\r\n            <Divider />\r\n            <View style={styles.toggleContainer}>\r\n                <Toggle style={styles.toggleElement} checked={checked} onChange={onCheckedChange}>\r\n                    Display expired?\r\n                </Toggle>\r\n            </View>\r\n            <BookingsList />\r\n            <Modal\r\n                visible={visible}\r\n                backdropStyle={styles.modalBackDrop}\r\n                onBackdropPress={() => setVisible(false)}>\r\n                <Card disabled={true} style={styles.modalContainer}>\r\n                    <Text>Map in progress...</Text>\r\n                </Card>\r\n            </Modal>\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\n//Get dimensions of screen\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        maxHeight: \"100%\",\r\n    },\r\n    listEntry: {\r\n    },\r\n    headerContainer: {\r\n        flexDirection: \"row\",\r\n        backgroundColor: \"#0095C5\",\r\n        padding: 5,\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    headerText: {\r\n        color: \"white\",\r\n        textAlignVertical: \"center\",\r\n    },\r\n    contentContainer: {\r\n        padding: 10,\r\n        borderBottomColor: '#0095C5',\r\n        borderBottomWidth: 1.5,\r\n    },\r\n    date: {\r\n        textAlign: 'right',\r\n        alignSelf: 'stretch',\r\n    },\r\n    icon: {\r\n        width: 32,\r\n        height: 32,\r\n        paddingRight: 5,\r\n    },\r\n    toggleContainer: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: 5,\r\n    },\r\n    toggleElement: {\r\n        paddingLeft: 5,\r\n        flex: 1,\r\n        textAlign: \"center\",\r\n    },\r\n    modalContainer: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: width - 45,\r\n        height: height - 45,\r\n    },\r\n    modalBackDrop: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}