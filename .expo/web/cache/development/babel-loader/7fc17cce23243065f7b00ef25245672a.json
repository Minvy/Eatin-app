{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bengel\\\\Documents\\\\eatin\\\\src\\\\scenes\\\\LoadingScreen.jsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useDispatch } from 'react-redux';\nimport { fetchAllRestaurant } from \"../store/actions/restaurants\";\n\nvar LoadingScreen = function LoadingScreen(props) {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurantsLoaded = _useState2[0],\n      setRestaurantsLoaded = _useState2[1];\n\n  var fetchRestaurants = function fetchRestaurants() {\n    dispatch(fetchAllRestaurant());\n    setRestaurantsLoaded(true);\n  };\n\n  if (!restaurantsLoaded) {\n    fetchRestaurants();\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"Loading\"));\n  }\n\n  return React.createElement(React.Fragment, null, props.children);\n};\n\nexport default LoadingScreen;","map":{"version":3,"sources":["C:/Users/Bengel/Documents/eatin/src/scenes/LoadingScreen.jsx"],"names":["React","useState","useDispatch","fetchAllRestaurant","LoadingScreen","props","dispatch","restaurantsLoaded","setRestaurantsLoaded","fetchRestaurants","children"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAGA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,kBAAR;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAD+B,kBAEmBD,QAAQ,CAAC,KAAD,CAF3B;AAAA;AAAA,MAExBM,iBAFwB;AAAA,MAELC,oBAFK;;AAI/B,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BH,IAAAA,QAAQ,CAACH,kBAAkB,EAAnB,CAAR;AACAK,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,GAHD;;AAKA,MAAI,CAACD,iBAAL,EAAwB;AACtBE,IAAAA,gBAAgB;AAEhB,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD;;AAED,SACE,0CACGJ,KAAK,CAACK,QADT,CADF;AAKD,CAxBD;;AA0BA,eAAeN,aAAf","sourcesContent":["// Loading.js\r\nimport React, {useState} from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport {fetchAllRestaurant} from '@/store/actions/restaurants'\r\n\r\nconst LoadingScreen = (props) => {\r\n  const dispatch = useDispatch()\r\n  const [restaurantsLoaded, setRestaurantsLoaded] = useState(false);\r\n\r\n  const fetchRestaurants = () => {\r\n    dispatch(fetchAllRestaurant());\r\n    setRestaurantsLoaded(true)\r\n  }\r\n\r\n  if (!restaurantsLoaded) {\r\n    fetchRestaurants()\r\n \r\n    return (\r\n      <View>\r\n        <Text>Loading</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {props.children}\r\n    </>\r\n    );\r\n}\r\n\r\nexport default LoadingScreen;"]},"metadata":{},"sourceType":"module"}