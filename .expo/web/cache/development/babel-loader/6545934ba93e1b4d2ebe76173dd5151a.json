{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var TOGGLE_FILTER = 'TOGGLE_FILTER';\nimport firebase from \"../../utils/firebase\";\nexport var filterRestaurant = function filterRestaurant(name) {\n  return {\n    type: TOGGLE_FILTER,\n    restaurantName: name\n  };\n};\nexport var FETCH_ALL_RESTAURANTS = 'FETCH_ALL_RESTAURANTS';\nexport var fetchAllRestaurant = function fetchAllRestaurant() {\n  return function _callee(dispatch) {\n    var restaurants;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.firestore().collection('restaurants'));\n\n          case 2:\n            restaurants = _context.sent;\n            restaurants.get().then(function (querySnapshot) {\n              var restaurantArray = querySnapshot.docs.map(function (doc) {\n                return _objectSpread(_objectSpread({}, doc.data()), {}, {\n                  id: doc.id\n                });\n              });\n              dispatch({\n                type: FETCH_ALL_RESTAURANTS,\n                restaurants: restaurantArray\n              });\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var UPDATE_RESTAURANT = 'UPDATE_RESTAURANT';\nexport var updateRestaurant = function updateRestaurant(saveRestaurant) {\n  return function (dispatch) {\n    var restaurant = firebase.firestore().collection('restaurants').doc(saveRestaurant.id);\n    restaurant.update({\n      name: saveRestaurant.name,\n      type: saveRestaurant.type,\n      postCode: saveRestaurant.postCode,\n      address: saveRestaurant.address,\n      phone: saveRestaurant.phone,\n      description: saveRestaurant.description,\n      imageUrl: saveRestaurant.imageUrl,\n      monday: saveRestaurant.monday,\n      monOpen: saveRestaurant.monOpen,\n      monClose: saveRestaurant.monClose,\n      tuesday: saveRestaurant.tuesday,\n      tuesOpen: saveRestaurant.tuesOpen,\n      tuesClose: saveRestaurant.tuesClose,\n      wednesday: saveRestaurant.wednesday,\n      wedOpen: saveRestaurant.wedOpen,\n      wedClose: saveRestaurant.wedClose,\n      thursday: saveRestaurant.thursday,\n      thursOpen: saveRestaurant.thursOpen,\n      thursClose: saveRestaurant.thursClose,\n      friday: saveRestaurant.friday,\n      friOpen: saveRestaurant.friOpen,\n      friClose: saveRestaurant.friClose,\n      saturday: saveRestaurant.saturday,\n      satOpen: saveRestaurant.satOpen,\n      satClose: saveRestaurant.satClose,\n      sunday: saveRestaurant.sunday,\n      sunOpen: saveRestaurant.sunOpen,\n      sunClose: saveRestaurant.sunClose\n    }).then(function () {\n      console.log('User updated!');\n    });\n    dispatch({\n      type: UPDATE_RESTAURANT,\n      restaurant: saveRestaurant\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Bengel/Documents/eatin/src/store/actions/restaurants.js"],"names":["TOGGLE_FILTER","firebase","filterRestaurant","name","type","restaurantName","FETCH_ALL_RESTAURANTS","fetchAllRestaurant","dispatch","firestore","collection","restaurants","get","then","querySnapshot","restaurantArray","docs","map","doc","data","id","UPDATE_RESTAURANT","updateRestaurant","saveRestaurant","restaurant","update","postCode","address","phone","description","imageUrl","monday","monOpen","monClose","tuesday","tuesOpen","tuesClose","wednesday","wedOpen","wedClose","thursday","thursOpen","thursClose","friday","friOpen","friClose","saturday","satOpen","satClose","sunday","sunOpen","sunClose","console","log"],"mappings":"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","sourcesContent":["export const TOGGLE_FILTER = 'TOGGLE_FILTER';\r\nimport firebase from 'src/utils/firebase'\r\n\r\nexport const filterRestaurant = (name) => {\r\n  return { type: TOGGLE_FILTER, restaurantName: name}\r\n}\r\n\r\nexport const FETCH_ALL_RESTAURANTS = 'FETCH_ALL_RESTAURANTS';\r\n\r\nexport const fetchAllRestaurant = () => {\r\n  return async dispatch => {\r\n    const restaurants = await firebase.firestore().collection('restaurants')\r\n    restaurants.get().then((querySnapshot) => {\r\n      const restaurantArray = querySnapshot.docs.map((doc) => {\r\n        return { ...doc.data(), id: doc.id }\r\n      })\r\n      dispatch({ type: FETCH_ALL_RESTAURANTS, restaurants: restaurantArray})\r\n    })\r\n  }\r\n};\r\n\r\nexport const UPDATE_RESTAURANT = 'UPDATE_RESTAURANT';\r\n\r\nexport const updateRestaurant = (saveRestaurant) => {\r\n  return dispatch => {\r\n    const restaurant = firebase.firestore().collection('restaurants').doc(saveRestaurant.id)\r\n    restaurant.update({\r\n      name: saveRestaurant.name,\r\n      type: saveRestaurant.type,\r\n      postCode: saveRestaurant.postCode,\r\n      address: saveRestaurant.address,\r\n      phone: saveRestaurant.phone,\r\n      description: saveRestaurant.description,\r\n      imageUrl: saveRestaurant.imageUrl,\r\n      monday: saveRestaurant.monday,\r\n      monOpen: saveRestaurant.monOpen,\r\n      monClose: saveRestaurant.monClose,\r\n      tuesday: saveRestaurant.tuesday,\r\n      tuesOpen: saveRestaurant.tuesOpen,\r\n      tuesClose: saveRestaurant.tuesClose,\r\n      wednesday: saveRestaurant.wednesday,\r\n      wedOpen: saveRestaurant.wedOpen,\r\n      wedClose: saveRestaurant.wedClose,\r\n      thursday: saveRestaurant.thursday,\r\n      thursOpen: saveRestaurant.thursOpen,\r\n      thursClose: saveRestaurant.thursClose,\r\n      friday: saveRestaurant.friday,\r\n      friOpen: saveRestaurant.friOpen,\r\n      friClose: saveRestaurant.friClose,\r\n      saturday: saveRestaurant.saturday,\r\n      satOpen: saveRestaurant.satOpen,\r\n      satClose: saveRestaurant.satClose,\r\n      sunday: saveRestaurant.sunday,\r\n      sunOpen: saveRestaurant.sunOpen,\r\n      sunClose: saveRestaurant.sunClose\r\n    }).then(() => {\r\n      console.log('User updated!');\r\n    })\r\n    dispatch({ type: UPDATE_RESTAURANT, restaurant: saveRestaurant })\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}