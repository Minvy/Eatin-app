{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nexport var AUTHENTICATE = 'AUTHENTICATE';\nexport var LOGOUT = 'LOGOUT';\nvar timer;\nexport var setDidTryAL = function setDidTryAL() {\n  return {\n    type: SET_DID_TRY_AL\n  };\n};\nexport var authenticate = function authenticate(userId, token, expiryTime) {\n  return function (dispatch) {\n    dispatch({\n      type: AUTHENTICATE,\n      userId: userId,\n      token: token\n    });\n  };\n};\nexport var signUp = function signUp(email, password) {\n  return dispatch(firebase.auth().createUserWithEmailAndPassword(email, password)).then(function (response) {\n    var uid = response.user.uid;\n    var data = {\n      id: uid,\n      email: email,\n      fullName: fullName\n    };\n    var usersRef = firebase.firestore().collection('users');\n    usersRef.doc(uid).set(data).then(function () {\n      dispatch(authenticate(email, 123, 100000));\n    }).catch(function (error) {\n      alert(error);\n    });\n  }).catch(function (error) {\n    alert(error);\n  });\n};\nexport var login = function login(email, password) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(authenticate(email, 123, 100000));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var logout = function logout() {\n  clearLogoutTimer();\n  return {\n    type: LOGOUT\n  };\n};","map":{"version":3,"sources":["C:/Users/Bengel/Documents/eatin/src/store/actions/auth.js"],"names":["AsyncStorage","AUTHENTICATE","LOGOUT","timer","setDidTryAL","type","SET_DID_TRY_AL","authenticate","userId","token","expiryTime","dispatch","signUp","email","password","firebase","auth","createUserWithEmailAndPassword","then","response","uid","user","data","id","fullName","usersRef","firestore","collection","doc","set","catch","error","alert","login","logout","clearLogoutTimer"],"mappings":";SAASA,Y;AAIT,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,MAAM,GAAG,QAAf;AAEP,IAAIC,KAAJ;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,SAAO;AAAEC,IAAAA,IAAI,EAAEC;AAAR,GAAP;AACD,CAFM;AAIP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAASC,KAAT,EAAgBC,UAAhB,EAA+B;AACzD,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAEJ,YAAR;AAAsBO,MAAAA,MAAM,EAAEA,MAA9B;AAAsCC,MAAAA,KAAK,EAAEA;AAA7C,KAAD,CAAR;AACD,GAFD;AAGD,CAJM;AAMP,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAOH,QAAQ,CAACI,QAAQ,CAACC,IAAT,GAAgBC,8BAAhB,CAA+CJ,KAA/C,EAAsDC,QAAtD,CAAD,CAAR,CACNI,IADM,CACD,UAACC,QAAD,EAAc;AAClB,QAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAT,CAAcD,GAA1B;AACA,QAAME,IAAI,GAAG;AACTC,MAAAA,EAAE,EAAEH,GADK;AAETP,MAAAA,KAAK,EAALA,KAFS;AAGTW,MAAAA,QAAQ,EAARA;AAHS,KAAb;AAKA,QAAMC,QAAQ,GAAGV,QAAQ,CAACW,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAjB;AAEAF,IAAAA,QAAQ,CAACG,GAAT,CAAaR,GAAb,EAAkBS,GAAlB,CAAsBP,IAAtB,EACGJ,IADH,CACQ,YAAM;AACVP,MAAAA,QAAQ,CACNJ,YAAY,CACVM,KADU,EAEV,GAFU,EAGV,MAHU,CADN,CAAR;AAOD,KATH,EAUGiB,KAVH,CAUS,UAACC,KAAD,EAAW;AACdC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACH,KAZH;AAaC,GAvBI,EAwBJD,KAxBI,CAwBE,UAACC,KAAD,EAAW;AACdC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACH,GA1BI,CAAP;AA2BD,CA5BM;AA8BP,OAAO,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACpB,KAAD,EAAQC,QAAR,EAAqB;AACxC,SAAO,iBAAMH,QAAN;AAAA;AAAA;AAAA;AAAA;AAKLA,YAAAA,QAAQ,CACNJ,YAAY,CACVM,KADU,EAEV,GAFU,EAGV,MAHU,CADN,CAAR;;AALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAaD,CAdM;AAgBP,OAAO,IAAMqB,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1BC,EAAAA,gBAAgB;AAEhB,SAAO;AAAE9B,IAAAA,IAAI,EAAEH;AAAR,GAAP;AACD,CAJM","sourcesContent":["import { AsyncStorage } from 'react-native';\r\n\r\n// export const SIGNUP = 'SIGNUP';\r\n// export const LOGIN = 'LOGIN';\r\nexport const AUTHENTICATE = 'AUTHENTICATE';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nlet timer;\r\n\r\nexport const setDidTryAL = () => {\r\n  return { type: SET_DID_TRY_AL };\r\n};\r\n\r\nexport const authenticate = (userId, token, expiryTime) => {\r\n  return dispatch => {\r\n    dispatch({ type: AUTHENTICATE, userId: userId, token: token });\r\n  };\r\n};\r\n\r\nexport const signUp = (email, password) => {\r\n  return dispatch(firebase.auth().createUserWithEmailAndPassword(email, password))\r\n  .then((response) => {\r\n    const uid = response.user.uid\r\n    const data = {\r\n        id: uid,\r\n        email,\r\n        fullName,\r\n    };\r\n    const usersRef = firebase.firestore().collection('users')\r\n\r\n    usersRef.doc(uid).set(data)\r\n      .then(() => {\r\n        dispatch(\r\n          authenticate(\r\n            email,\r\n            123,\r\n            100000\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n          alert(error)\r\n      });\r\n    })\r\n    .catch((error) => {\r\n        alert(error)\r\n    });\r\n}\r\n\r\nexport const login = (email, password) => {\r\n  return async dispatch => {\r\n    //placeholder for http request\r\n    // await timeout(1000);\r\n\r\n\r\n    dispatch(\r\n      authenticate(\r\n        email,\r\n        123,\r\n        100000\r\n      )\r\n    );\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  clearLogoutTimer();\r\n  // AsyncStorage.removeItem('userData');\r\n  return { type: LOGOUT };\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}