{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { RESTAURANT } from \"../../other/dummy-data\";\nimport { TOGGLE_FILTER } from \"../actions/restaurants\";\nimport { FETCH_ALL_RESTAURANTS } from \"../actions/restaurants\";\nimport { UPDATE_RESTAURANT } from \"../actions/restaurants\";\nimport { act } from 'react-test-renderer';\nvar initialState = {\n  restaurants: [],\n  filteredRestaurant: []\n};\n\nvar restaurantReducer = function restaurantReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_FILTER:\n      if (action.restaurantName.length == 0) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          filteredRestaurant: state.restaurants\n        });\n      } else {\n        filteredRestaurant = state.restaurants.filter(function (restaurant) {\n          return restaurant.title.toLowerCase().includes(action.restaurantName.toLowerCase());\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          filteredRestaurant: filteredRestaurant\n        });\n      }\n\n    case FETCH_ALL_RESTAURANTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        restaurants: action.restaurants,\n        filteredRestaurant: action.restaurants\n      });\n\n    default:\n      return state;\n\n    case UPDATE_RESTAURANT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        restaurants: _objectSpread({}, state.restaurants)\n      });\n  }\n};\n\nexport default restaurantReducer;","map":{"version":3,"sources":["C:/Users/Bengel/Documents/eatin/src/store/reducers/restaurants.js"],"names":["RESTAURANT","TOGGLE_FILTER","FETCH_ALL_RESTAURANTS","UPDATE_RESTAURANT","act","initialState","restaurants","filteredRestaurant","restaurantReducer","state","action","type","restaurantName","length","filter","restaurant","title","toLowerCase","includes"],"mappings":";;;;;;AACA,SAASA,UAAT;AACA,SAASC,aAAT;AACA,SAASC,qBAAT;AACA,SAASC,iBAAT;AACA,SAASC,GAAT,QAAoB,qBAApB;AAGA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,kBAAkB,EAAE;AAFD,CAArB;;AAwBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC1D,UAAOA,MAAM,CAACC,IAAd;AAEE,SAAKV,aAAL;AAEE,UAAIS,MAAM,CAACE,cAAP,CAAsBC,MAAtB,IAAgC,CAApC,EAAuC;AACrC,+CAAWJ,KAAX;AAAkBF,UAAAA,kBAAkB,EAAEE,KAAK,CAACH;AAA5C;AACD,OAFD,MAEO;AACLC,QAAAA,kBAAkB,GAAGE,KAAK,CAACH,WAAN,CAAkBQ,MAAlB,CAAyB,UAAAC,UAAU;AAAA,iBAAIA,UAAU,CAACC,KAAX,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwCR,MAAM,CAACE,cAAP,CAAsBK,WAAtB,EAAxC,CAAJ;AAAA,SAAnC,CAArB;AACA,+CAAWR,KAAX;AAAkBF,UAAAA,kBAAkB,EAAEA;AAAtC;AACD;;AACH,SAAKL,qBAAL;AACE,6CAAWO,KAAX;AAAkBH,QAAAA,WAAW,EAAEI,MAAM,CAACJ,WAAtC;AAAmDC,QAAAA,kBAAkB,EAAEG,MAAM,CAACJ;AAA9E;;AACF;AACE,aAAOG,KAAP;;AACF,SAAKN,iBAAL;AACE,6CACKM,KADL;AACYH,QAAAA,WAAW,oBAAMG,KAAK,CAACH,WAAZ;AADvB;AAfJ;AAmBD,CApBD;;AAsBA,eAAeE,iBAAf","sourcesContent":["// import { MEALS } from ../\r\nimport { RESTAURANT } from '@/other/dummy-data';\r\nimport { TOGGLE_FILTER } from '@/store/actions/restaurants'\r\nimport { FETCH_ALL_RESTAURANTS } from '@/store/actions/restaurants'\r\nimport { UPDATE_RESTAURANT } from '@/store/actions/restaurants';\r\nimport { act } from 'react-test-renderer';\r\n\r\n\r\nconst initialState = {\r\n  restaurants: [],\r\n  filteredRestaurant: []\r\n}\r\n\r\n// const editState = {\r\n//   name: \" \",\r\n//   type: \" \",\r\n//   postCode: \" \",\r\n//   address: \" \",\r\n//   phone: \" \",\r\n//   description: \" \",\r\n//   imageUrl: \" \",\r\n//   open: \" \",\r\n//   close: \" \",\r\n//   monday: true,\r\n//   tuesday: true,\r\n//   wednesday: true,\r\n//   thursday: true,\r\n//   friday: true,\r\n//   saturday: true,\r\n//   sunday: true,\r\n// }\r\n\r\nconst restaurantReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    //Filters restaurant by name\r\n    case TOGGLE_FILTER:\r\n      // Check if empty string\r\n      if (action.restaurantName.length == 0) {\r\n        return {...state, filteredRestaurant: state.restaurants}\r\n      } else {\r\n        filteredRestaurant = state.restaurants.filter(restaurant => restaurant.title.toLowerCase().includes(action.restaurantName.toLowerCase()));\r\n        return {...state, filteredRestaurant: filteredRestaurant}\r\n      }\r\n    case FETCH_ALL_RESTAURANTS:\r\n      return {...state, restaurants: action.restaurants, filteredRestaurant: action.restaurants}\r\n    default:\r\n      return state;\r\n    case UPDATE_RESTAURANT:\r\n      return {\r\n        ...state, restaurants: {...state.restaurants}\r\n      }\r\n  }\r\n}\r\n\r\nexport default restaurantReducer;\r\n"]},"metadata":{},"sourceType":"module"}